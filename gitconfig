[user]
	name = johannes karoff
	email = johannes@karoff.net

[core]
    whitespace = blank-at-eof,blank-at-eol,tab-in-indent,space-before-tab
    excludesfile = /home/cornerman/.gitignore_global
    pager = less

[include]
    path = /home/cornerman/projects/dottr/yolk/git/gitconfig

[alias]
    un = reset HEAD
    una = "!git reset HEAD $(git rev-parse --show-toplevel 2> /dev/null)"
    prev = reset HEAD~1
    wip = "!git cama wip"
    stashu = stash save --include-untracked
    f = pull
    p = push
    u = up
    a = add
    s = status
    po = "!git push --set-upstream origin \"$(git rev-parse --abbrev-ref HEAD)\""
    ci = commit
    cie = commit --amend
    cia = commit --amend --no-edit
    cm = commit -m
    cam = commit -am
    cama = "!git add -A; git commit -m"
    br = branch
    co = checkout
    cob = checkout -b
    rbc = rebase --continue
    rba = rebase --abort
    rbs = rebase --skip
    mrc = merge --continue
    mra = merge --abort
    mrs = merge --skip
    cpc = cherry-pick --continue
    cpa = cherry-pick --abort
    cps = cherry-pick --skip
    dbr = "!f() { git branch -D $1 && git push origin :$1;}; f"
    d = diff --irreversible-delete --find-copies-harder --find-copies --ignore-space-at-eol --ignore-space-change --ignore-all-space --inter-hunk-context=2
    ds = diff --irreversible-delete --find-copies-harder --find-copies --ignore-space-at-eol --ignore-space-change --ignore-all-space --inter-hunk-context=2 --staged
    dw = diff --color-words='[A-Z][a-z]*|[a-z]+|[^[:space:]]' --irreversible-delete --find-copies-harder --find-copies --ignore-space-at-eol --ignore-space-change --ignore-all-space --inter-hunk-context=2
    dws = diff --color-words='[A-Z][a-z]*|[a-z]+|[^[:space:]]' --irreversible-delete --find-copies-harder --find-copies --ignore-space-at-eol --ignore-space-change --ignore-all-space --inter-hunk-context=2 --staged
    l = log
    ld = log -p
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    ls = ls-files
    new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
    graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"

[color]
    status = auto
    interactive = auto
    branch = auto
    diff=auto

[push]
    default = simple

[merge]
    tool = meld

[credential]
	helper = cache --timeout=3600

[branch]
    autosetuprebase = always

[tig]
    vertical-split = true
    tab-size = 4
    ignore-space = all
    ignore-case = true ; search
    ; wrap-lines = true ; conflicts with stage-update-line
    editor-line-number = true
    mouse-scroll = true
    show-changes = true
    mouse = true

[tig "bind"]
    generic = g move-first-line
    generic = G move-last-line
    main = G move-last-line ; overwrite default keybinding
    status = a !git commit --amend
    status = A @!git add -A
    stage = u stage-update-line
    stage = U status-update
    stage = C !git commit
    stage = C !git commit
    ; generic = C !git cherry-pick %(commit)
